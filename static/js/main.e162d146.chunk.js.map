{"version":3,"sources":["pages/Home/Home.module.scss","components/ViewCodeButton/ViewCodeButton.module.scss","pages/Home/WeekOne/Demo/Demo1/Demo1.js","pages/Home/WeekOne/Demo/Demo2/Demo2.js","pages/Home/WeekOne/Demo/Demo3/Demo3.js","pages/Home/WeekOne/Demo/Demo1/demo1-code.js","pages/Home/WeekOne/Demo/Demo2/demo2-code.js","pages/Home/WeekOne/Demo/Demo3/demo3-code.js","components/ViewCodeButton/ViewCodeButton.js","components/Code/Code.js","pages/Home/WeekOne/WeekOne.js","pages/Home/index.js","pages/Home/Home.js","utils/index.js","index.js","pages/Home/WeekOne/WeekOne.module.scss"],"names":["module","exports","bottomCircleProps","id","cx","cy","r","stroke","strokeWidth","fill","topCircleInitProps","strokeDasharray","Math","ceil","PI","style","transform","transformOrigin","textProps","x","y","fontSize","fontWeight","alignmentBaseline","textAnchor","perimeter","Demo1","initValue","useState","rangeValue","setRangeValue","topCircleProps","setTopCircleProps","width","height","onChange","e","value","target","percent","d2","type","min","max","step","svgProps","border","pathProps1","d","pathProps2","animateTransformProps1","attributeName","attributeType","from","to","dur","repeatCount","animateTransformProps2","begin","circleProps1","circleProps2","lineCircleProps","lineAnimateProps1","lineAnimateProps2","Demo2","Demo3","cx1","setCx1","cx2","setCx2","r1","setR1","r2","setR2","turn","setTurn","onClick","move","document","getElementById","scale","beginElement","code","trim","ViewCodeButton","props","className","styles","viewCodeButton","Code","show","display","WeekOne","demo1","demo2","demo3","setShow","weekone","demoWrapper","demo1Code","demo2Code","demo3Code","Home","useEffect","title","addEventListener","event","hidden","setTimeout","changeDocumentTitle","hljs","highlightAll","home","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e162d146.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewCodeButton\":\"ViewCodeButton_viewCodeButton__28WQQ\"};","import { useState } from 'react';\n\nconst bottomCircleProps = {\n    id: 'bottom-circle',\n    cx: 50,\n    cy: 50,\n    r: 50 - 5,\n    stroke: '#D1D3D7',\n    strokeWidth: 2,\n    fill: 'none',\n};\n\nconst topCircleInitProps = {\n    id: 'top-circle',\n    cx: 50,\n    cy: 50,\n    r: 50 - 5,\n    stroke: '#00A5E0',\n    strokeWidth: 5,\n    fill: 'none',\n    strokeDasharray: `0 ${Math.ceil(2 * Math.PI * (50 - 5))}`,\n    style: {\n        transform: 'rotate(-90deg)',\n        transformOrigin: 'center',\n    },\n};\n\nconst textProps = {\n    x: '50%',\n    y: '50%',\n    fill: '#00A5E0',\n    style: {\n        fontSize: '22px',\n        fontWeight: '700',\n    },\n    alignmentBaseline: 'middle',\n    textAnchor: 'middle',\n};\n\nconst perimeter = 2 * Math.PI * topCircleInitProps.r;\n\nconst Demo1 = ({ initValue = 0 }) => {\n    const [rangeValue, setRangeValue] = useState(initValue);\n    const [topCircleProps, setTopCircleProps] = useState(topCircleInitProps);\n    /**\n     * @description 改变圆strokeDasharray\n     * @param {*} e\n     */\n    const onRangeChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n\n        setRangeValue(value);\n        const percent = value / 100;\n        const d1 = percent * perimeter;\n        const d2 = (1 - percent) * perimeter;\n        const strokeDasharray = `${d1} ${d2}`;\n\n        setTopCircleProps({\n            ...topCircleProps,\n            strokeDasharray,\n        });\n    };\n\n    return (\n        <div>\n            <svg width=\"100\" height=\"100\">\n                <circle {...bottomCircleProps} />\n                <circle {...topCircleProps} />\n                <text {...textProps}>{rangeValue}</text>\n            </svg>\n            <input onChange={onRangeChange} value={rangeValue} type=\"range\" min=\"0\" max=\"100\" step=\"0.01\" />\n        </div>\n    );\n};\n\nexport default Demo1;\n","/**\n * svg 是宽高为600的正方形\n * 中心坐标为(300,300)\n */\n\nconst svgProps = {\n    width: 600,\n    height: 600,\n    style: {\n        border: '1px solid indigo',\n    },\n};\n/**\n * a命令参数：(rx ry x-axis-rotation large-arc-flag,sweep-flag x y)+\n * 画圆方法\n * <!--\n        <path d=\"\n            M cx, cy\n            m -r, 0\n            a r,r 0 1,0 (r * 2),0\n            a r,r 0 1,0 -(r * 2),0\n        \"/>\n        或者\n        <path d=\"\n            M cx - r, cy\n            a r,r 0 1,0 (r * 2),0\n            a r,r 0 1,0 -(r * 2),0\n        \"/>\n     -->\n */\nconst pathProps1 = {\n    d: 'M450 300 a150 150 0 0,1 -150 150 v50 a200 200 0 0,0 200 -200 z',\n    fill: 'none',\n    stroke: 'blue',\n    style: {\n        transformOrigin: 'center',\n    },\n};\n\nconst pathProps2 = {\n    d: 'M300 150 a150 150 0 0,0 -150 150 h-50 a200 200 0 0,1 200 -200 z',\n    fill: 'none',\n    stroke: 'red',\n    style: {\n        transformOrigin: 'center',\n    },\n};\n\nconst animateTransformProps1 = {\n    attributeName: 'transform',\n    attributeType: 'XML',\n    type: 'rotate',\n    from: '0',\n    to: '360',\n    dur: '3',\n    repeatCount: 'indefinite',\n};\n\nconst animateTransformProps2 = {\n    ...animateTransformProps1,\n    begin: 'ce2.mouseover',\n};\n\nconst circleProps1 = {\n    id: 'ce1',\n    cx: 300,\n    cy: 300,\n    r: 140,\n    fill: '#0d1117',\n    stroke: 'Gold',\n};\n\nconst circleProps2 = {\n    id: 'ce2',\n    cx: 300,\n    cy: 300,\n    r: 140,\n    fill: '#0d1117',\n    stroke: 'Gold',\n};\n\nconst textProps = {\n    x: '50%',\n    y: '50%',\n    fill: 'Gold',\n    style: {\n        fontSize: '22px',\n        fontWeight: '700',\n    },\n    alignmentBaseline: 'middle',\n    textAnchor: 'middle',\n};\n\n// 45/2 === 360/16 将圆360°16等分，每等分的圆心角，然后计算出弧长:公式： nπr/180\nconst arcLength = (45 / 2) * Math.PI * (100 / 180);\nconst d1 = 2;\nconst d2 = arcLength - 2;\nconst lineCircleProps = {\n    id: 'linecircle',\n    fill: 'none',\n    strokeWidth: 100,\n    cx: 300,\n    cy: 300,\n    r: 150,\n    stroke: 'white',\n    strokeDasharray: `${d1} ${d2}`,\n    style: {\n        transformOrigin: 'center',\n    },\n};\n\nconst lineAnimateProps1 = {\n    attributeName: 'transform',\n    attributeType: 'XML',\n    type: 'rotate',\n    from: 0,\n    to: 360,\n    dur: 9,\n    repeatCount: 'indefinite',\n};\n\nconst lineAnimateProps2 = {\n    ...lineAnimateProps1,\n    begin: 'ce2.mouseover',\n};\n\nconst Demo2 = () => {\n    return (\n        <div>\n            <svg {...svgProps}>\n                <circle {...lineCircleProps}>\n                    <animateTransform {...lineAnimateProps1} />\n                </circle>\n                <circle {...circleProps1} />\n                <path {...pathProps1}>\n                    <animateTransform {...animateTransformProps1} />\n                </path>\n                <path {...pathProps2}>\n                    <animateTransform {...animateTransformProps1} />\n                </path>\n            </svg>\n            <svg {...svgProps}>\n                <circle {...lineCircleProps}>\n                    <animateTransform {...lineAnimateProps2} />\n                </circle>\n                <circle {...circleProps2} />\n                <text {...textProps}>hover me!</text>\n                <path {...pathProps1}>\n                    <animateTransform {...animateTransformProps2} />\n                </path>\n                <path {...pathProps2}>\n                    <animateTransform {...animateTransformProps2} />\n                </path>\n            </svg>\n        </div>\n    );\n};\n\nexport default Demo2;\n","import { useState } from 'react';\n\nconst Demo3 = () => {\n    const [cx1, setCx1] = useState(120);\n    const [cx2, setCx2] = useState(400);\n    const [r1, setR1] = useState(50);\n    const [r2, setR2] = useState(90);\n    const [turn, setTurn] = useState(true);\n\n    const onClick = () => {\n        const move = document.getElementById('move');\n        const scale = document.getElementById('scale');\n\n        if (turn) {\n            setCx1(120);\n            setCx2(400);\n            setR1(50);\n            setR2(90);\n            move.beginElement();\n            scale.beginElement();\n            setTurn(false);\n        } else {\n            setCx1(400);\n            setCx2(120);\n            setR1(90);\n            setR2(50);\n            move.beginElement();\n            scale.beginElement();\n            setTurn(true);\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <button onClick={onClick}>按钮</button>\n            </div>\n            <svg width=\"100%\" height=\"400\">\n                <circle cx=\"120\" cy=\"100\" r=\"50\" fill=\"none\" stroke=\"red\">\n                    <animate\n                        id=\"move\"\n                        attributeType=\"XML\"\n                        attributeName=\"cx\"\n                        from={cx1}\n                        to={cx2}\n                        begin=\"click\"\n                        dur=\"1s\"\n                        fill=\"freeze\"\n                    />\n                    <animate\n                        id=\"scale\"\n                        attributeType=\"XML\"\n                        attributeName=\"r\"\n                        from={r1}\n                        to={r2}\n                        begin=\"click\"\n                        dur=\"1s\"\n                        fill=\"freeze\"\n                    />\n                </circle>\n            </svg>\n        </div>\n    );\n};\n\nexport default Demo3;\n","const code = `\nimport { useState } from 'react';\n\nconst bottomCircleProps = {\n    id: 'bottom-circle',\n    cx: 50,\n    cy: 50,\n    r: 50 - 5,\n    stroke: '#D1D3D7',\n    strokeWidth: 2,\n    fill: 'none',\n};\n\nconst topCircleInitProps = {\n    id: 'top-circle',\n    cx: 50,\n    cy: 50,\n    r: 50 - 5,\n    stroke: '#00A5E0',\n    strokeWidth: 5,\n    fill: 'none',\n    strokeDasharray: \\`0 \\${Math.ceil(2 * Math.PI * (50 - 5))}\\`,\n    style: {\n        transform: 'rotate(-90deg)',\n        transformOrigin: 'center',\n    },\n};\n\nconst textProps = {\n    x: '50%',\n    y: '50%',\n    fill: '#00A5E0',\n    style: {\n        fontSize: '22px',\n        fontWeight: '700',\n    },\n    alignmentBaseline: 'middle',\n    textAnchor: 'middle',\n};\n\n// 外圆周长\nconst perimeter = 2 * Math.PI * topCircleInitProps.r;\n\nconst Demo1 = ({ initValue = 0 }) => {\n    const [rangeValue, setRangeValue] = useState(initValue);\n    const [topCircleProps, setTopCircleProps] = useState(topCircleInitProps);\n    /**\n     * @description 改变圆strokeDasharray\n     * @param {*} e\n     */\n    const onRangeChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n\n        setRangeValue(value);\n        const percent = value / 100;\n        const d1 = percent * perimeter;\n        const d2 = (1 - percent) * perimeter;\n        const strokeDasharray = \\`\\${d1} \\${d2}\\`;\n\n        setTopCircleProps({\n            ...topCircleProps,\n            strokeDasharray,\n        });\n    };\n\n    return (\n        <div>\n            <svg width=\"100\" height=\"100\">\n                <circle {...bottomCircleProps} />\n                <circle {...topCircleProps} />\n                <text {...textProps}>{rangeValue}</text>\n            </svg>\n            <input onChange={onRangeChange} value={rangeValue} type=\"range\" min=\"0\" max=\"100\" step=\"0.01\" />\n        </div>\n    );\n};\n\nexport default Demo1;\n`;\n\nexport default code.trim();\n","const code = `\n/**\n * svg 是宽高为600的正方形\n * 中心坐标为(300,300)\n */\n\nconst svgProps = {\n    width: 600,\n    height: 600,\n    style: {\n        border: '1px solid indigo',\n    },\n};\n/**\n * a命令参数：(rx ry x-axis-rotation large-arc-flag,sweep-flag x y)+\n * 画圆方法\n * <!--\n        <path d=\"\n            M cx, cy\n            m -r, 0\n            a r,r 0 1,0 (r * 2),0\n            a r,r 0 1,0 -(r * 2),0\n        \"/>\n        或者\n        <path d=\"\n            M cx - r, cy\n            a r,r 0 1,0 (r * 2),0\n            a r,r 0 1,0 -(r * 2),0\n        \"/>\n     -->\n */\nconst pathProps1 = {\n    d: 'M450 300 a150 150 0 0,1 -150 150 v50 a200 200 0 0,0 200 -200 z',\n    fill: 'none',\n    stroke: 'blue',\n    style: {\n        transformOrigin: 'center',\n    },\n};\n\nconst pathProps2 = {\n    d: 'M300 150 a150 150 0 0,0 -150 150 h-50 a200 200 0 0,1 200 -200 z',\n    fill: 'none',\n    stroke: 'red',\n    style: {\n        transformOrigin: 'center',\n    },\n};\n\nconst animateTransformProps1 = {\n    attributeName: 'transform',\n    attributeType: 'XML',\n    type: 'rotate',\n    from: '0',\n    to: '360',\n    dur: '3',\n    repeatCount: 'indefinite',\n};\n\nconst animateTransformProps2 = {\n    ...animateTransformProps1,\n    begin: 'ce2.mouseover',\n};\n\nconst circleProps1 = {\n    id: 'ce1',\n    cx: 300,\n    cy: 300,\n    r: 140,\n    fill: '#0d1117',\n    stroke: 'Gold',\n};\n\nconst circleProps2 = {\n    id: 'ce2',\n    cx: 300,\n    cy: 300,\n    r: 140,\n    fill: '#0d1117',\n    stroke: 'Gold',\n};\n\nconst textProps = {\n    x: '50%',\n    y: '50%',\n    fill: 'Gold',\n    style: {\n        fontSize: '22px',\n        fontWeight: '700',\n    },\n    alignmentBaseline: 'middle',\n    textAnchor: 'middle',\n};\n\n// 45/2 === 360/16 将圆360°16等分，每等分的圆心角，然后计算出弧长:公式： nπr/180\nconst arcLength = (45 / 2) * Math.PI * (100 / 180);\nconst d1 = 2;\nconst d2 = arcLength - 2;\nconst lineCircleProps = {\n    id: 'linecircle',\n    fill: 'none',\n    strokeWidth: 100,\n    cx: 300,\n    cy: 300,\n    r: 150,\n    stroke: 'white',\n    strokeDasharray: \\`\\${d1} \\${d2}\\`,\n    style: {\n        transformOrigin: 'center',\n    },\n};\n\nconst lineAnimateProps1 = {\n    attributeName: 'transform',\n    attributeType: 'XML',\n    type: 'rotate',\n    from: 0,\n    to: 360,\n    dur: 9,\n    repeatCount: 'indefinite',\n};\n\nconst lineAnimateProps2 = {\n    ...lineAnimateProps1,\n    begin: 'ce2.mouseover',\n};\n\nconst Demo2 = () => {\n    return (\n        <div>\n            <svg {...svgProps}>\n                <circle {...lineCircleProps}>\n                    <animateTransform {...lineAnimateProps1} />\n                </circle>\n                <circle {...circleProps1} />\n                <path {...pathProps1}>\n                    <animateTransform {...animateTransformProps1} />\n                </path>\n                <path {...pathProps2}>\n                    <animateTransform {...animateTransformProps1} />\n                </path>\n            </svg>\n            <svg {...svgProps}>\n                <circle {...lineCircleProps}>\n                    <animateTransform {...lineAnimateProps2} />\n                </circle>\n                <circle {...circleProps2} />\n                <text {...textProps}>hover me!</text>\n                <path {...pathProps1}>\n                    <animateTransform {...animateTransformProps2} />\n                </path>\n                <path {...pathProps2}>\n                    <animateTransform {...animateTransformProps2} />\n                </path>\n            </svg>\n        </div>\n    );\n};\n\nexport default Demo2;\n`;\n\nexport default code.trim();\n","const code = `\nimport { useState } from 'react';\n\nconst Demo3 = () => {\n    const [cx1, setCx1] = useState(120);\n    const [cx2, setCx2] = useState(400);\n    const [r1, setR1] = useState(50);\n    const [r2, setR2] = useState(90);\n    const [turn, setTurn] = useState(true);\n\n    const onClick = () => {\n        const move = document.getElementById('move');\n        const scale = document.getElementById('scale');\n\n        if (turn) {\n            setCx1(120);\n            setCx2(400);\n            setR1(50);\n            setR2(90);\n            move.beginElement();\n            scale.beginElement();\n            setTurn(false);\n        } else {\n            setCx1(400);\n            setCx2(120);\n            setR1(90);\n            setR2(50);\n            move.beginElement();\n            scale.beginElement();\n            setTurn(true);\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <button onClick={onClick}>按钮</button>\n            </div>\n            <svg width=\"100%\" height=\"400\">\n                <circle cx=\"120\" cy=\"100\" r=\"50\" fill=\"none\" stroke=\"red\">\n                    <animate\n                        id=\"move\"\n                        attributeType=\"XML\"\n                        attributeName=\"cx\"\n                        from={cx1}\n                        to={cx2}\n                        begin=\"click\"\n                        dur=\"1s\"\n                        fill=\"freeze\"\n                    />\n                    <animate\n                        id=\"scale\"\n                        attributeType=\"XML\"\n                        attributeName=\"r\"\n                        from={r1}\n                        to={r2}\n                        begin=\"click\"\n                        dur=\"1s\"\n                        fill=\"freeze\"\n                    />\n                </circle>\n            </svg>\n        </div>\n    );\n};\n\nexport default Demo3;\n`;\n\nexport default code.trim();\n","import styles from './ViewCodeButton.module.scss';\n\nconst ViewCodeButton = (props) => {\n    const { onClick } = props;\n\n    return (\n        <div className={styles.viewCodeButton} onClick={onClick}>\n            VIEW CODE\n        </div>\n    );\n};\n\nexport default ViewCodeButton;\n","const Code = ({ show, code }) => {\n    return (\n        <pre style={{ display: show ? 'block' : 'none' }}>\n            <code>{code}</code>\n        </pre>\n    );\n};\n\nexport default Code;\n","import styles from './WeekOne.module.scss';\nimport { useState } from 'react';\nimport { Demo1, Demo2, Demo3, demo1Code, demo2Code, demo3Code } from './Demo';\nimport ViewCodeButton from '../../../components/ViewCodeButton';\nimport Code from '../../../components/Code';\n\nconst WeekOne = () => {\n    const [show, setShow] = useState({\n        demo1: false,\n        demo2: false,\n        demo3: false,\n    });\n\n    return (\n        <div className={styles.weekone}>\n            <div id=\"demo1\" className={styles.demoWrapper}>\n                <Demo1 />\n                <ViewCodeButton onClick={() => setShow({ ...show, demo1: !show.demo1 })} />\n                <Code show={show.demo1} code={demo1Code} />\n            </div>\n            <div id=\"demo2\" className={styles.demoWrapper}>\n                <Demo2 />\n                <ViewCodeButton onClick={() => setShow({ ...show, demo2: !show.demo2 })} />\n                <Code show={show.demo2} code={demo2Code} />\n            </div>\n            <div id=\"demo3\" className={styles.demoWrapper}>\n                <Demo3 />\n                <ViewCodeButton onClick={() => setShow({ ...show, demo3: !show.demo3 })} />\n                <Code show={show.demo3} code={demo3Code} />\n            </div>\n        </div>\n    );\n};\n\nexport default WeekOne;\n","import Home from './Home';\n\nexport default Home;\n","import styles from './Home.module.scss';\nimport { useEffect } from 'react';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css';\nimport { changeDocumentTitle } from '../../utils';\nimport WeekOne from './WeekOne';\n\nexport default function Home() {\n    useEffect(() => {\n        changeDocumentTitle();\n        hljs.highlightAll();\n    }, []);\n\n    return (\n        <div className={styles.home}>\n            <WeekOne />\n        </div>\n    );\n}\n","export const changeDocumentTitle = () => {\n    var title = document.title;\n\n    document.addEventListener(\n        'visibilitychange',\n        function (event) {\n            if (document.hidden) {\n                document.title = '快回来~ (ಥ _ ಥ)';\n            } else {\n                document.title = 'hello~ (*^_^*)';\n                setTimeout(function () {\n                    document.title = title;\n                }, 2000);\n            }\n        },\n        false\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/Home';\n\nimport './styles/global/global.css';\n// import './styles/highlight/github-dark.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Home />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekone\":\"WeekOne_weekone__1AkEX\",\"demoWrapper\":\"WeekOne_demoWrapper__EYVxS\"};"],"sourceRoot":""}